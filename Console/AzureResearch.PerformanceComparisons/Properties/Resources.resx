<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus hendrerit enim vel nisl consectetur tincidunt eu mattis sapien. Maecenas nisl augue, congue et interdum vitae, convallis ac est. Sed tincidunt vestibulum nibh, vitae feugiat dui tincidunt et. Suspendisse id volutpat purus. Phasellus sem magna, aliquam a sodales congue, tincidunt a orci. Morbi turpis erat, lobortis id sem a, tincidunt malesuada sem. Morbi placerat a nibh sit amet dapibus. Ut feugiat enim nec consequat ultrices.

Vivamus mattis elit metus, id tristique lectus tempor sed. Donec rhoncus tortor felis, a dapibus urna sodales nec. Morbi arcu diam, condimentum vitae diam eget, dapibus convallis enim. Curabitur quam libero, pellentesque sed vestibulum nec, fringilla vel tortor. Ut dapibus risus metus, vel porttitor nisi consequat vitae. Cras scelerisque pellentesque pharetra. Aliquam mollis, magna ut venenatis accumsan, nulla nulla dignissim mauris, nec auctor eros nibh in dui. Aenean vitae felis a nisl egestas dignissim quis vitae arcu. Integer scelerisque sapien sed lorem consequat varius. Sed lorem justo, pharetra vel pulvinar a, viverra lobortis est.

Aenean consequat dui non purus blandit eleifend. Donec sed nulla leo. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vestibulum luctus velit nulla, vitae ornare leo tincidunt eget. Aliquam ut mollis leo. Nam et mauris neque. Proin quis suscipit leo. Nam suscipit feugiat mi quis gravida. Nulla facilisi. Duis mollis neque erat, pharetra fermentum nisl iaculis ut. Morbi in dui auctor, tempor libero non, mollis neque. In non dictum tellus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent tempor leo felis, ut suscipit arcu tristique vitae. Nullam ut augue lacinia, auctor erat ut, pellentesque augue.

Aenean ornare odio sit amet magna mattis, vel bibendum eros volutpat. Nulla id iaculis sem, luctus hendrerit elit. Pellentesque in ante risus. Suspendisse non semper ante. Donec felis elit, laoreet sit amet erat vel, feugiat venenatis metus. Vivamus in turpis ante. Nullam adipiscing sapien quis rutrum suscipit. Nunc vel congue sem. Sed non eros vel enim sagittis rutrum at eget velit. Nunc tristique elit pharetra nisi ultrices consectetur. Morbi odio felis, adipiscing at blandit vel, tristique eget lacus. Nam sit amet leo leo. Suspendisse in lacus dignissim, gravida mauris nec, viverra dolor. Etiam sit amet nibh arcu.

Vestibulum diam enim, laoreet eget cursus vitae, egestas sit amet libero. In pellentesque magna eget felis bibendum, ac fermentum ligula condimentum. Nunc dapibus dolor vel pellentesque gravida. Pellentesque hendrerit, risus at rutrum volutpat, nulla dui venenatis nisi, in semper ligula leo non tellus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla facilisi. Nullam volutpat sed tortor sed suscipit.</value>
  </data>
</root>